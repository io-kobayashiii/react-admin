{
    "openapi": "3.0.3",
    "info": {
        "title": "React Admin APIs",
        "version": "0.0.1",
        "contact": {
            "name": "Yusaku Ikeda",
            "email": "ikeda@whizzy.co.jp",
            "url": "https://crea7dos3tos.com"
        }
    },
    "servers": [
        {
            "url": "https://api-service.example.com/",
            "description": "プロダクション API"
        },
        {
            "url": "http://{host}:{port}/",
            "description": "開発用",
            "variables": {
                "host": {
                    "default": "localhost"
                },
                "port": {
                    "default": "8083"
                }
            }
        }
    ],
    "tags": [
        {
            "name": "User",
            "description": "ユーザー側アプリケーションで利用されるAPIです",
            "externalDocs": {
                "description": "ユーザー側アプリケーションURL",
                "url": "https://crea7dos3tos@gmail.com"
            }
        },
        {
            "name": "Auth",
            "description": "認証に関する取り扱いを行います"
        },
        {
            "name": "Company",
            "description": "企業に関する取り扱いを行います"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "User",
                    "Auth"
                ],
                "summary": "ログイン",
                "description": "emailとpasswordを用いて認証を行う必要があります。",
                "requestBody": {
                    "description": "認証に必要なemailとpasswordをrequestBodyにセットしてリクエストを行う必要があります。",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/auth"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "ログインに成功するとアクセストークン・アクセストークンのトークンタイプ・アクセストークンの有効期限を返します。",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/jwt"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/notFoundError"
                    },
                    "422": {
                        "$ref": "#/components/responses/unprocessableEntityError"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "User",
                    "Auth"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "ログアウト",
                "description": "ログアウトに使用します。",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/success"
                    },
                    "401": {
                        "$ref": "#/components/responses/unAuthorizedError"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                }
            }
        },
        "/refresh": {
            "post": {
                "tags": [
                    "User",
                    "Auth"
                ],
                "summary": "アクセストークンのリフレッシュ",
                "description": "利用しているアクセストークンが古い場合は、対象のエンドポイントにヘッダーにトークンを付与しリクエストを送信することで、新しいアクセストークンを取得することができます。",
                "responses": {
                    "200": {
                        "description": "成功時のステータスコードです。",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/jwt"
                                }
                            }
                        }
                    },
                    "404": {
                        "$ref": "#/components/responses/notFoundError"
                    },
                    "422": {
                        "$ref": "#/components/responses/unprocessableEntityError"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                }
            }
        },
        "/companies": {
            "get": {
                "tags": [
                    "User",
                    "Company"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "企業一覧取得",
                "description": "企業の一覧を配列に格納される形で取得することができます。",
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/companies"
                    },
                    "401": {
                        "$ref": "#/components/responses/unAuthorizedError"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                }
            }
        },
        "/companies/{company_id}": {
            "get": {
                "tags": [
                    "User",
                    "Company"
                ],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "summary": "企業詳細取得",
                "description": "特定企業情報をオブジェクトの形で取得することができます。",
                "parameters": [
                    {
                        "name": "companyId",
                        "in": "path",
                        "description": "特定企業の詳細情報を取得するエンドポイント",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/companyDetail"
                    },
                    "401": {
                        "$ref": "#/components/responses/unAuthorizedError"
                    },
                    "422": {
                        "$ref": "#/components/responses/unprocessableEntityError"
                    },
                    "500": {
                        "$ref": "#/components/responses/internalServerError"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "requestBodies": {},
        "responses": {
            "success": {
                "description": "成功時のステータスコードです。",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/success"
                        }
                    }
                }
            },
            "badRequestError": {
                "description": "構文が無効であるためサーバーがリクエストを理解できないことを示します。",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/400Error"
                        }
                    }
                }
            },
            "unAuthorizedError": {
                "description": "HTTP 標準ではunauthorized(不許可)と定義されていますが、意味的にはこのレスポンスはunauthenticated(未認証)です。つまり、クライアントはリクエストされたレスポンスを得るためには認証を受けなければなりません。",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/401Error"
                        }
                    }
                }
            },
            "forbiddenError": {
                "description": "認証されていないなどの理由でクライアントにコンテンツのアクセス権がなく、サーバーが適切なレスポンスの返信を拒否していることを示します。 401 とは異なり、クライアントの識別子がサーバーに知られています。",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/403Error"
                        }
                    }
                }
            },
            "notFoundError": {
                "description": "サーバーがリクエストされたリソースを発見できないことを示します。ブラウザーでは、これは URL が解釈できなかったことを意味します。 API では、これは通信先が有効であるものの、リソース自体が存在しないことを意味することがあります。サーバーは認証されていないクライアントからリソースの存在を隠すために、 403 の代わりにこのレスポンスを返すことがあります。このレスポンスコードはウェブで頻繁に見られるため、おそらくもっとも有名なコードでしょう。",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/404Error"
                        }
                    }
                }
            },
            "unprocessableEntityError": {
                "description": "he HyperText Transfer Protocol (HTTP) の 422 Unprocessable Entity 応答状態コードは、サーバーが要求本文のコンテンツ型を理解でき、要求本文の構文が正しいものの、中に含まれている指示が処理できなかったことを表します。",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/422Error"
                        }
                    }
                }
            },
            "internalServerError": {
                "description": "サーバー側で処理方法がわからない事態が発生したことを示します。",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/500Error"
                        }
                    }
                }
            },
            "serviceUnavailable": {
                "description": "サーバーはリクエストを処理する準備ができていないことを示します。一般的な原因は、サーバーがメンテナンスや過負荷でダウンしていることです。このレスポンスとともに問題について説明する、ユーザーにわかりやすいページを送信するべきであることに注意してください。このレスポンスは一時的な状況について使用するものであり、また可能であれば、サービスが復旧する前に Retry-After: HTTP ヘッダーに予定時刻を含めるべきです。また、これら一時的な状況のレスポンスは通常キャッシュされるべきではないことから、ウェブ管理者はこのレスポンスとともに送られるキャッシュ関連のヘッダーに注意しなければなりません。",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/503Error"
                        }
                    }
                }
            },
            "companies": {
                "description": "プロジェクトIDとプロジェクト名のオブジェクトの配列を返します。",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/companies"
                        }
                    }
                }
            },
            "companyDetail": {
                "description": "企業ID・企業名・都道府県・郵便番号・住所を返します。",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/companyDetail"
                        }
                    }
                }
            }
        },
        "schemas": {
            "success": {
                "title": "Success"
            },
            "400Error": {
                "type": "object",
                "properties": {
                    "message": {
                        "title": "エラーメッセージ",
                        "type": "string",
                        "example": {
                            "$ref": "#/components/examples/400Message/value"
                        }
                    }
                }
            },
            "401Error": {
                "type": "object",
                "properties": {
                    "message": {
                        "title": "エラーメッセージ",
                        "type": "string",
                        "example": {
                            "$ref": "#/components/examples/401Message/value"
                        }
                    }
                }
            },
            "403Error": {
                "type": "object",
                "properties": {
                    "message": {
                        "title": "エラーメッセージ",
                        "type": "string",
                        "example": {
                            "$ref": "#/components/examples/403Message/value"
                        }
                    }
                }
            },
            "404Error": {
                "type": "object",
                "properties": {
                    "message": {
                        "title": "エラーメッセージ",
                        "type": "string",
                        "example": {
                            "$ref": "#/components/examples/404Message/value"
                        }
                    }
                }
            },
            "422Error": {
                "type": "object",
                "properties": {
                    "message": {
                        "title": "エラーメッセージ",
                        "type": "string",
                        "example": {
                            "$ref": "#/components/examples/422Message/value"
                        }
                    }
                }
            },
            "500Error": {
                "type": "object",
                "properties": {
                    "message": {
                        "title": "エラーメッセージ",
                        "type": "string",
                        "example": {
                            "$ref": "#/components/examples/500Message/value"
                        }
                    }
                }
            },
            "503Error": {
                "type": "object",
                "properties": {
                    "message": {
                        "title": "エラーメッセージ",
                        "type": "string",
                        "example": {
                            "$ref": "#/components/examples/503Message/value"
                        }
                    }
                }
            },
            "accessToken": {
                "title": "アクセストークン",
                "description": "JWTの認証に必要なトークンです。",
                "type": "string",
                "example": {
                    "$ref": "#/components/examples/access_token/value"
                }
            },
            "tokenType": {
                "title": "トークンタイプ",
                "description": "JWTの認証に必要なアクセストークンのタイプです。",
                "type": "string",
                "example": {
                    "$ref": "#/components/examples/token_type/value"
                }
            },
            "expiresIn": {
                "title": "トークンに対する有効期限",
                "description": "JWTの認証に必要なアクセストークンの有効期限です。",
                "type": "string",
                "example": {
                    "$ref": "#/components/examples/expires_in/value"
                }
            },
            "email": {
                "title": "メールアドレス",
                "description": "ユーザーUniqueなメールアドレスです。",
                "type": "string",
                "example": {
                    "$ref": "#/components/examples/email/value"
                }
            },
            "password": {
                "title": "パスワード",
                "description": "認証に必要なパスワードです。",
                "type": "string",
                "example": {
                    "$ref": "#/components/examples/password/value"
                }
            },
            "auth": {
                "title": "認証",
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "$ref": "#/components/schemas/email"
                    },
                    "password": {
                        "$ref": "#/components/schemas/password"
                    }
                }
            },
            "jwt": {
                "type": "object",
                "required": [
                    "access_token",
                    "token_type",
                    "expires_in"
                ],
                "properties": {
                    "access_token": {
                        "$ref": "#/components/schemas/accessToken"
                    },
                    "token_type": {
                        "$ref": "#/components/schemas/tokenType"
                    },
                    "expires_in": {
                        "$ref": "#/components/schemas/expiresIn"
                    }
                }
            },
            "prefectureId": {
                "title": "都道府県ID",
                "type": "integer",
                "example": {
                    "$ref": "#/components/examples/prefectureId/value"
                }
            },
            "zipCode": {
                "title": "郵便番号",
                "type": "string",
                "example": {
                    "$ref": "#/components/examples/zipCode/value"
                }
            },
            "address": {
                "title": "住所",
                "type": "string",
                "example": {
                    "$ref": "#/components/examples/address/value"
                }
            },
            "companyId": {
                "title": "企業ID",
                "type": "integer",
                "example": {
                    "$ref": "#/components/examples/companyId/value"
                }
            },
            "companyName": {
                "title": "企業名",
                "type": "string",
                "example": {
                    "$ref": "#/components/examples/companyName/value"
                }
            },
            "companyDetail": {
                "title": "企業詳細",
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "prefecture_id",
                    "zip_code",
                    "address"
                ],
                "properties": {
                    "id": {
                        "example": 1,
                        "title": "会社ID",
                        "type": "integer"
                    },
                    "name": {
                        "example": "hoge",
                        "title": "会社名",
                        "type": "string"
                    },
                    "prefecture_id": {
                        "example": 13,
                        "title": "都道府県ID",
                        "type": "integer"
                    },
                    "zip_code": {
                        "example": "111-233",
                        "title": "郵便番号",
                        "type": "string"
                    },
                    "address": {
                        "example": "hogehofajlj",
                        "title": "住所",
                        "type": "string"
                    }
                }
            },
            "company": {
                "title": "企業",
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/companyId"
                    },
                    "name": {
                        "$ref": "#/components/schemas/companyName"
                    }
                }
            },
            "companies": {
                "title": "企業リスト",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/company"
                }
            }
        },
        "examples": {
            "400Message": {
                "value": "エラーが発生しました。時間をあけて再度お試しください"
            },
            "401Message": {
                "value": "認証できません。認証を行ってください"
            },
            "403Message": {
                "value": "こちらへのアクセス権限がありません。再度実行してください。"
            },
            "404Message": {
                "value": "お探しになっている〇〇は見つかりませんでした。"
            },
            "422Message": {
                "value": "Requestの拡張部分で弾かれました。"
            },
            "500Message": {
                "value": "エラーが発生しました。再度時間を空けてお試しください"
            },
            "503Message": {
                "value": "サービスにアクセスが集中している為アクセスが出来ません。再度時間をあけてお試しください。"
            },
            "email": {
                "value": "hoge@gmail.com"
            },
            "password": {
                "value": "password0"
            },
            "companyId": {
                "value": 4
            },
            "companyName": {
                "value": "株式会社Whizzy"
            },
            "prefectureId": {
                "value": 13
            },
            "zipCode": {
                "value": "111-0032"
            },
            "address": {
                "value": "台東区浅草"
            },
            "access_token": {
                "value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9eyJpc3MiOiJodHRwOlwvXC9hcGkubG9jYWxob3N0XC9sb2dpbiIsImlhdCI6MTYwMzgxMDQ5NywiZXhwIjoxNjA1MDIwMDk3LCJuYmYiOjE2MDM4MTA0OTcsImp0aSI6IjBwWnRGTHNOOWtRR3dtc1giLCJzdWIiOjEsInBydiI6IjIzYmQ1Yzg5NDlmNjAwYWRiMzllNzAxYzQwMDg3MmRiN2E1OTc2ZjcifQ.TyqP4HEPt1pmxdLtFwK4l95723pioDYQdR-lVM2HG_0"
            },
            "token_type": {
                "value": "bearer"
            },
            "expires_in": {
                "value": 20160
            }
        }
    }
}